#pragma kernel GenerateNoise

#include "Includes/FastNoiseLite.compute"
#include "Includes/HelperFunctions.compute"

float _NoiseScale;
float _Amplitude;
float _Frequency;
int _Octaves;
float _GroundPercent;

RWStructuredBuffer<float> _Values;


[numthreads(numThreads, numThreads, numThreads)]
void GenerateNoise (uint3 id : SV_DispatchThreadID)
{
    fnl_state noise = fnlCreateState();
    noise.noise_type = FNL_NOISE_OPENSIMPLEX2;
    noise.fractal_type = FNL_FRACTAL_RIDGED;
    noise.frequency = _Frequency;
    noise.octaves = _Octaves;
    
    float3 pos = id * _NoiseScale;
    float ground = -pos.y + (_GroundPercent * _BoundSize);
    float n = ground + fnlGetNoise3D(noise, pos.x, pos.y, pos.z) * _Amplitude;
    
    _Values[indexFromCoord(id)] = n;
}
